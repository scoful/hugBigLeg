package ${package.Controller};

import org.springframework.web.bind.annotation.RequestMapping;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.factory.annotation.Autowired;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end

import java.util.List;
import javax.validation.Valid;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${swagger2})
@Api(tags = "xx管理模块-yy接口")
#end
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    #set($serviceName = $table.serviceName.substring(0,1).toLowerCase() + $table.serviceName.substring(1))##把首字母变小写
    private ${table.serviceName} ${serviceName};

    #set($entityName = $entity.substring(0,1).toLowerCase() + $entity.substring(1))##把首字母变小写
    /**
    * 列表查询
    *
    * @param page
    * @param ${entityName}
    * @return
    * @author ${author}
    * @since ${date}
    */
    @ApiOperation(value = "列表查询")
    @GetMapping("/")
    public Result<List<${entity}>> query(Page page, ${entity} ${entityName}) {
        List<${entity}> list = ${serviceName}.list();
        return new Result<>(list).total(new PageInfo<${entity}>(list).getTotal());
    }

    /**
     * 单记录查询
     *
     * @param ${entityName}Id
     * @return
     * @author ${author}
     * @since ${date}
     */
    @ApiOperation(value = "单记录查询")
    @GetMapping("/{${entityName}Id}")
    public Result<${entity}> get(@PathVariable("${entityName}Id") String ${entityName}Id) {
        return new Result<>(${serviceName}.getById(${entityName}Id));
    }

    /**
     * 新增
     *
     * @param ${entityName}
     * @return
     * @author ${author}
     * @since ${date}
     */
    @ApiOperation(value = "新增")
    @PostMapping("/")
    public Result<?> add(@Valid @RequestBody ${entity} ${entityName}) {
        ${entityName}.setId(IdMaker.get());
        ${serviceName}.save(${entityName});

        return Result.SUCCESS;
    }

    /**
     * 修改
     *
     * @param ${entityName}Id
     * @param ${entityName}
     * @return
     * @author ${author}
     * @since ${date}
     */
    @ApiOperation(value = "修改")
    @PutMapping("/{${entityName}Id}")
    public Result<?> update(@PathVariable("${entityName}Id") String ${entityName}Id, @Valid @RequestBody ${entity} ${entityName}) {
        ${entityName}.setId(${entityName}Id);
        ${serviceName}.updateById(${entityName});

        return Result.SUCCESS;
    }

    /**
     * 删除
     *
     * @param ${entityName}Id
     * @return
     * @author ${author}
     * @since ${date}
     */
    @ApiOperation(value = "删除")
    @DeleteMapping("/{${entityName}Id}")
    public Result<?> delete(@PathVariable("${entityName}Id") String ${entityName}Id) {
        ${serviceName}.removeById(${entityName}Id);

        return Result.SUCCESS;
    }


}

#end